
new features:
   1.Permissioned membership
   2.Channels
   3.The immutable, shared ledger
   4.Chaincode execution  apart from Chaincode ordering
   5.Modularity
   
   

   //////////////////////Fabric CA User’s Guide////////////
   
   It provides features such as:
1) registration of identities, or connects to LDAP as the user registry;
2) issuance of Enrollment Certificates (ECerts);
3) issuance of Transaction Certificates (TCerts), providing both anonymity and unlinkability when transacting on a Hyperledger Fabric blockchain;
4) certificate renewal and revocation.
   
   
   ///////////////////////////////////////////////////
   
   
   Hyperledger Fabric Glossary
   
   Blockchain Network
A blockchain network consists of, at minimum, one peer (responsible for endorsing and committing transactions) 
leveraging an ordering service, and a membership services component (certificate authority) 
that distributes and revokes cryptographic certificates representative of user identities and permissions.

区块链网络
区块链网络包括，
至少，一个对等点（负责签署和提交事务）利用一个订购服务，以及会员服务组件（证书权威），分配和撤销代表用户的身份和权限的加密证书。



Permissioned Network

A blockchain network where any entity (node) is required to maintain a member identity on the network. 
End users must be authorized and authenticated in order to use the network.

被许可网络
在区块链网络中任何实体（节点）需要保持对网络成员的身份。为了使用网络，必须对终端用户进行授权和认证。



Peer
Peer is a component that executes, and maintains a ledger of, transactions.   There are two roles for a peer – endorser and committer.  
The architecture has been designed such that a peer is always a committer, but not necessarily always an endorser. 
Peers play no role in the ordering of transactions.

对等点
对等点是一个执行和维护帐本事务的组件。分为背书人和提交者两个角色。
该架构的设计是这样的，一个对等点是一个提交者，但不一定是背书人。对等点在事务的排序中不起作用。


Member

A Member is a participant (such as a company or organization) that operates components - Peers, Orderers, and applications 
- in the blockchain network.  A member is identified by its CA certificate (i.e. a unique enrollment).   
A Member’s peer will be leveraged by end users in order to perform transaction operations on specific channels.

成员
一个成员是一个参与者（比如一个公司或组织）在区块链网络中操作各服务部件(peer orderer 和程序应用)的参与者。成员通过其CA证书（即唯一注册）来标识。
成员的对等点将由最终用户使用，以便在特定的通道上执行事务操作。



Transaction
Refers to an operation in which an authorized end user performs read/write operations against the ledger. 
There are three unique types of transactions - deploy, invoke, and query.

事务
指授权的最终用户对分类账执行读/写操作的操作。有三种独特的事务类型——部署、调用和查询。


End User
An end user is someone who would interact with the blockchain through a set of published APIs (i.e. the hfc SDK).  
You can have an admin user who will typically grant permissions to the Member’s components, and a client user, who, 
upon proper authentication through the admin user, will drive chaincode applications (deploy, invoke, query) on various channels.  
In the case of self-executing transactions, the application itself can also be thought of as the end user.

最终用户
最终用户是通过一组已发布的API交互（即HFC SDK）与区块链系统进行交互的用户。
你可以有一个管理员用户，通常会对成员组件和客户端用户设置相应权限，客户端用户通过管理员用户授予的适当权限，执行在不同通道中链码应用（部署、调用、查询）。
在自执行事务的情况下，应用程序本身也可以被认为是最终用户。


Ordering Service
A centralized or decentralized service that orders transactions in a block.  You can select different implementations of 
the “ordering” function - e.g “solo” for simplicity and testing, Kafka for crash fault tolerance, 
or sBFT/PBFT for byzantine fault tolerance. You can also develop your own protocol to plug into the service.

事务排序服务
一个集中或分散的服务，在一个区块内事务排序服务。你可以选择“排序”功能的不同实现如“单飞”的简单测试，卡夫卡崩溃的容错性，或完全通过sBFT/ PBFT拜占庭容错。
您还可以开发自己的协议来植入在这服务中。


Consensus
A broader term overarching the entire transactional flow, which serves to generate an agreement on the order and 
to confirm the correctness of the set of transactions constituting a block.

共识
一个更广泛的术语，用于描述整个事务流，此事务流确认构成一个块的事务集的正确性和顺序。


Orderer
One of the network entities that form the ordering service. A collection of ordering service nodes (OSNs) will order transactions 
into blocks according to the network’s chosen ordering implementation. In the case of “solo”, only one OSN is required. 
Transactions are “broadcast” to orderers, and then “delivered” as blocks to the appropriate channel.

事务排序方
形成事务排序服务的网络实体之一。事务排序服务节点集合（OSN）将事务排序成块根据网络的选择排序的实现。
在“单例”的情况下，只有一个OSN是必需的。事务被“广播”给事务排序方，然后以区块的形式“送”到相应的通道中。


Endorser
A specific peer role, where the Endorser peer is responsible for simulating transactions, and in turn preventing unstable 
or non-deterministic transactions from passing through the network.  A transaction is sent to an endorser in the form of 
a transaction proposal.  All endorsing peers are also committing peers (i.e. they write to the ledger).

背书人
一个特定的对等点角色，背书人对等点负责仿真交易，从而防止不稳定或不确定的事务通过网络。事务被发送给在事务提案类型的背书人。
所有背书人对等点也会提交事务（也就是他们给区块链账本写入内容）。



Committer
A specific peer role, where the Committing peer appends the validated transactions to the channel-specific ledger. 
A peer can act as both an endorser and committer, but in more regulated circumstances might only serve as a committer.

提交者
一个特定的对等点角色，提交者将被验证后事务内容追加到特定通道帐本中。一个节点可以作为一个背书人和提交者，但在更加规范的情况下可能只作为一个提交者。

Bootstrap
The initial setup of a network.  There is the bootstrap of a peer network, during which policies, system chaincodes, 
and cryptographic materials (certs) are disseminated amongst participants, and the bootstrap of an ordering network.  
The bootstrap of the ordering network must precede the bootstrap of the peer network, as a peer network is contingent 
upon the presence of an ordering service. A network need only be “bootstrapped” once.

程序引导
网络的初始设置。这是一个对等网络程序引导，在政策、系统链码，加密证书在所有参与者被传播的过程以及排序网络程序引导过程。排序网络的程序引导必须先于对等网络的引导，
因为对等网络取决于事务排序服务的存在。构建网络只需要“引导”一次即可。


Block
A batch of ordered transactions, potentially containing ones of an invalid nature, that is delivered to the peers 
for validation and committal.


块
一批有序的事务，可能含有的无效性内容的块，这些块被给相关对等点交付确认和提交。



System chain
Contains a configuration block defining the network at a system level.
The system chain lives within the ordering service, and similar to a channel, has an initial configuration containing information 
such as: root certificates for participating organizations and ordering service nodes, policies, listening address for OSN, 
and configuration details. Any change to the overall network (e.g. a new org joining or a new OSN being added) will result in 
a new configuration block being added to the system chain.
The system chain can be thought of as the common binding for a channel or group of channels. For instance, a collection 
of financial institutions may form a consortium (represented through the system chain), and then proceed to create channels 
relative to their aligned and varying business agendas.

系统链
包含在系统级别定义网络的配置块。
系统链包括事务排序服务和一个类似的通道，它包含的信息如初始配置：参与组织和事务排序服务节点的根证书和政策，OSN监听地址和配置细节。
对整体网络的任何变化（例如一个新的机构加入或添加新的OSN）将导致一个新的配置块被添加到系统链。
系统链可以看作是一个通道或一组通道的公共绑定。例如，金融机构的集合可以形成一个财团（通过系统链来代表），
然后着手建立与其对齐的和不同的业务议程相关的渠道。


Channel
A Channel is formed as an offshoot of the system chain; and best thought of as a “topic” for peers to subscribe to, or rather, 
a subset of a broader blockchain network. A peer may subscribe on various channels and can only access the transactions 
on the subscribed channels.  Each channel will have a unique ledger, thus accommodating confidentiality and execution 
of multilateral contracts.
通道
一个通道是作为系统链的一个分支链；一个通道最好作为一个对等点订阅的主题，或者说，一个更广泛的区块链网络的一个子集。
对等点可以订阅各种通道，对等点只能访问已订阅通道上的事务。每个通道将有一个独特的账本，从而便于保密和执行多边合同。


Multi-channel
The fabric will allow for multiple channels with a designated ledger per channel.  This capability allows for multilateral contracts
where only the restricted participants on the channel will submit, endorse, order, or commit transactions on that channel.  
As such, a single peer can maintain multiple ledgers without compromising privacy and confidentiality.

多通道
Fabric项目将允许多个频道，每个频道有指定的帐本。此能力允许多边合同，只有通道上的受限制参与者将提交、认可、排序或提交该通道上的事务。
例如，一个节点可以在不牺牲隐私和机密维护多个帐本。


Configuration Block
Contains the configuration data defining members and policies for a system chain or channel(s). Any changes to the channel(s) 
or overall network (e.g. a new member successfully joining) will result in a new configuration block being appended to 
the appropriate chain.  This block will contain the contents of the genesis block, plus the delta. The policy to alter 
or edit a channel-level configuration block is defined through the Configuration System Chaincode (CSCC).

配置块
系统链或通道中定义成员和策略的配置数据。对通道或整体网络的任何更改（例如新成员成功加入）将导致一个新的配置块被追加到适当的链上。
这一块将包含创世纪块的内容，加上三角洲。通过配置系统信息链码（CSCC）定义了一个改变或编辑通道水平配置块的政策。


Genesis Block
The configuration block that initializes a blockchain network or channel, and also serves as the first block on a chain.

创世记块
配置块初始化区块链网络或通道，并作为链条上的第一块。


Ledger
An append-only transaction log managed by peers.  Ledger keeps the log of ordered transaction batches. 
There are two denotations for ledger; peer and validated. The peer ledger contains all batched transactions 
coming out of the ordering service, some of which may in fact be invalid. The validated ledger will contain 
fully endorsed and validated transaction blocks. In other words, transactions in the validated ledger have passed 
the entire gamut of “consensus” - i.e. they have been endorsed, ordered, and validated.

帐本
由对等点管理追加事务日志。帐本保留有序交易批次的日志。帐本有两个含义;被验证和对等点。对等点帐本包含从排序服务中出来的所有批量事务，
其中一些上可能无效。验证的帐本将包含完全认可和验证的交易块。换句话说，被验证的帐中的交易已经通过了“共识”的全部检查 - 即已被认可，排序和验证。


Dynamic membership
The fabric will allow for endorsers and committers to come and go based on membership, and the blockchain network will 
continue to operate. Dynamic membership is critical when businesses grow and members need to be added or removed for various reasons.


动态会员资格
Fabric项目的架构将允许背书人和提交者根据成员资格进行交往，并且区块链网络将持续管理这种成员资格。动态会员资格对于企业发展至关重要，
而成员需要由于各种原因被添加或删除。


Query/Non-Key Value Query
using couchDB 2.0 you now have the capability to leverage an API to perform more complex queries against combinations of variables, 
including time ranges, transaction types, users, etc.  This feature allows for auditors and regulators to aggregate and mine large 
chunks of data.
   
查询/非键值查询
使用couchDB 2.0，您现在可以利用API对变量组合执行更复杂的查询，包括时间范围，交易类型，用户等。此功能允许审计者和监管机构聚合和挖掘分析大量数据。




Gossip Protocol
A communication protocol used among peers in a channel, to maintain their network and to elect Leaders, through which funnels 
all communications with the Ordering Service. Gossip allows for data dissemination, therein providing support for scalability 
due to the fact that not all peers are required to execute transactions and communicate with the ordering service.

Gossip协议
在通道中使用的通信协议，维护区块链网络,选择领导者，通过漏斗器与排序服务进行通信。 Gossip协议允许数据传播，其中提供对可扩展性的支持，
因为不是所有对等体都需要执行事务并与排序服务通信。

System Chaincode
System Chaincode (SCC) is a chaincode built with the peer and run in the same process as the peer. SCC is responsible for broader 
configurations of fabric behavior, such as timing and naming services.


系统链码
系统链码（SCC）是与对等体构建链码在对等体中进行相同的处理过程。 SCC负责架构行为的更广泛配置，例如:时序和命名服务。

Lifecycle System Chaincode
Lifecycle System Chaincode (LSCC) is a system chaincode that handles deployment, upgrade and termination transactions for user 
chaincodes.


生命周期系统链码
生命周期系统链码（LSCC）是一个系统链码，用于处理用户链码的部署，升级和终止事务。

Configuration System Chaincode
Configuration System Chaincode (CSCC) is a “management” system chaincode that handles configuration requests to alter an aspect of 
a channel (e.g. add a new member).  The CSCC will interrogate the channel’s policies to determine if a new configuration block can 
be created.

配置系统链码
配置系统链码（CSCC）是一个“管理”系统链码的链码，用于处理配置请求以改变通道的某些方面（例如添加新成员）。 CSCC将询问通道的策略以确定
是否可以创建新的配置块。


Endorsement System Chaincode
Endorsement System Chaincode (ESCC) is a system chaincode that andles the endorsement policy for specific pieces of chaincode 
deployed on a network, and defines the necessary parameters (percentage or combination of signatures from endorsing peers) 
for a transaction proposal to receive a successful proposal response (i.e. endorsement).  Deployments and invocations 
of user chaincodes both require a corresponding ESCC, which is defined at the time of the deployment transaction proposal 
for the user chaincode.

认可系统链码
认可系统链码（ESCC）是一种系统链码，用于对部署在网络上的特定链码进行认可策略，并定义交易建议以获得成功的提案响应所需的参数（来自认可对等体的百分比或签名的组合） （即认可）。用户链码的部署和调用都需要相应的ESCC，ESCC在用户链码的部署事务提议时被定义。

验证系统链码
验证系统链码（VSCC）处理部署在网络上的特定链码的验证策略。用户链码的部署和调用都需要相应的VSCC，它在用户链码的部署事务建议时定义。 VSCC验证指定级别的“认可”（即认可政策），以防止客户端的恶意或错误行为。

政策
有批准，验证，封锁提交，链码管理和网络/频道管理的政策。策略是通过系统链码定义的，并包含网络操作成功的必要规范。例如，认可政策可能要求100％的支持者在交易模拟时获得相同的结果。

认可政策
块链网络必须制定管理拟议的模拟交易的（或不）批准的规则。这种认可政策可能要求交易由最少数量的认可对等方，认可对等方的最小百分比或分配给特定链码应用程序的所有认可对等方认可。政策可以根据应用程序进行策划，也可以通过认可的同行来预防不当行为的弹性（有意或不慎）。还需要一个明确的支持部署交易代理策略，安装新的链码。

提案
从客户端或管理员用户发送到网络中的一个或多个对等体的事务请求;示例包括部署，调用，查询或配置请求。

部署
指的是在链上部署链码应用程序的功能。首先以提案的形式将部署从客户端SDK或CLI发送到生命周期系统链码。

调用
用于调用链码功能。调用被作为交易提案捕获，然后通过批准，排序，验证，提交的模块化流程。 invoke的结构是一个函数和数组的参数。

会员服务
会员服务管理被许可的块链网络上的用户身份;此功能通过fabric-ca组件实现。 fabric-ca由客户端和服务器组成，并处理用于识别和认证网络用户的注册资料（证书）的分发和撤销。

在线MembershipSrvc代码（MSP）在对等体本身运行，并且在对事务处理结果进行身份验证时由对等体使用，并由客户端验证/验证事务。会员服务通过组合公钥基础设施（PKI）和权力下放（协商一致）来区分角色。相比之下，未经许可的网络不提供会员特定权限或角色的区别。

被许可的块链要求实体注册长期身份凭证（注册证书），可以根据实体类型进行区分。对于用户，注册证书授权交易证书颁发机构（TCA）颁发伪证;这些证书授权用户提交的交易。交易证书持续存在于块状态上，并使授权审计师能够关联并识别交易方以进行其他不可链接交易。

会员服务提供商
会员服务提供商（MSP）是指提供（匿名）凭据给系统的系统的抽象组件，以及它们的对等体参与Hyperledger / Fabric网络。客户端使用这些凭据对其事务进行身份验证，对等体使用这些凭据来验证事务处理结果（签注）。尽管与系统的事务处理组件强有力地连接，但是该接口旨在具有定义的成员服务组件，使得可以平滑地插入其中的替代实现，而不修改系统的事务处理组件的核心。

初始化
在发布部署和调用之前，在一段链码中定义资产和参数的链码方法。顾名思义，该函数应该用于对链码进行任何初始化，例如在分类帐上配置键/值对的初始状态。

appshim
o使用的应用程序客户端

Validation System Chaincode
Validation System Chaincode (VSCC) Handles the validation policy for specific pieces of chaincode deployed on a network.  
Deployments and invocations of user chaincodes both require a corresponding VSCC, which is defined at the time of 
the deployment transaction proposal for the user chaincode. VSCC validates the specified level of “endorsement” 
(i.e. endorsement policy) in order to prevent malicious or faulty behavior from the client.

Policy
There are policies for endorsement, validation, block committal, chaincode management and network/channel management.  
Policies are defined through system chaincodes, and contain the requisite specifications for a network action to succeed.  
For example, an endorsement policy may require that 100% of endorsers achieve the same result upon transaction simulation.

Endorsement policy
A blockchain network must establish rules that govern the endorsement (or not) of proposed, simulated transactions. 
This endorsement policy could require that a transaction be endorsed by a minimum number of endorsing peers, 
a minimum percentage of endorsing peers, or by all endorsing peers that are assigned to a specific chaincode application. 
Policies can be curated based on the application and the desired level of resilience against misbehavior (deliberate or not) 
by the endorsing peers. A distinct endorsement policy for deploy transactions, which install new chaincode, is also required.

Proposal
A transaction request sent from a client or admin user to one or more peers in a network; examples include deploy, invoke, query, 
or configuration request.

Deploy
Refers to the function through which chaincode applications are deployed on chain. A deploy is first sent from the client SDK 
or CLI to a Lifecycle System Chaincode in the form of a proposal.

Invoke
Used to call chaincode functions.  Invocations are captured as transaction proposals, which then pass through a modular flow of 
endorsement, ordering, validation, committal.  The structure of invoke is a function and an array of arguments.

Membership Services
Membership Services manages user identities on a permissioned blockchain network; this function is implemented through 
the fabric-ca component.  fabric-ca is comprised of a client and server, and handles the distribution and revocation 
of enrollment materials (certificates), which serve to identify and authenticate users on a network.

The in-line MembershipSrvc code (MSP) runs on the peers themselves, and is used by the peer when authenticating transaction 
processing results, and by the client to verify/authenticate transactions. Membership Services provides a distinction of roles 
by combining elements of Public Key Infrastructure (PKI) and decentralization (consensus). By contrast, non-permissioned 
networks do not provide member-specific authority or a distinction of roles.

A permissioned blockchain requires entities to register for long-term identity credentials (Enrollment Certificates), 
which can be distinguished according to entity type. For users, an Enrollment Certificate authorizes the Transaction Certificate 
Authority (TCA) to issue pseudonymous credentials; these certificates authorize transactions submitted by the user. 
Transaction certificates persist on the blockchain, and enable authorized auditors to associate, and identify the transacting 
parties for otherwise un-linkable transactions.

Membership Service Provider
The Membership Service Provider (MSP) refers to an abstract component of the system that provides (anonymous) credentials to clients, 
and peers for them to participate in a Hyperledger/fabric network. Clients use these credentials to authenticate their transactions, 
and peers use these credentials to authenticate transaction processing results (endorsements). While strongly connected to 
the transaction processing components of the systems, this interface aims to have membership services components defined, 
in such a way that alternate implementations of this can be smoothly plugged in without modifying the core of transaction processing 
components of the system.

Initialize
A chaincode method to define the assets and parameters in a piece of chaincode prior to issuing deploys and invocations.  
As the name implies, this function should be used to do any initialization to the chaincode, such as configure the initial state 
of a key/value pair on the ledger.

appshim
An application client used by ordering service nodes to process “broadcast” messages arriving from clients or peers. This shim allows 
the ordering service to perform membership-related functionality checks. In other words, is a peer or client properly authorized to 
perform the requested function (e.g. upgrade chaincode or reconfigure channel settings).

osshim
An ordering service client used by the application to process ordering service messages (i.e. “deliver” messages) that are advertised 
within a channel.


