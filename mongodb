
ScanCallback.SCAN_FAILED_APPLICATION_REGISTRATION_FAILED

// Here, thisActivity is the current activity
if (ContextCompat.checkSelfPermission(thisActivity,
                Manifest.permission.READ_CONTACTS)
        != PackageManager.PERMISSION_GRANTED) {

    // Should we show an explanation?
    if (ActivityCompat.shouldShowRequestPermissionRationale(thisActivity,
            Manifest.permission.READ_CONTACTS)) {

        // Show an explanation to the user *asynchronously* -- don't block
        // this thread waiting for the user's response! After the user
        // sees the explanation, try again to request the permission.

    } else {

        // No explanation needed, we can request the permission.

        ActivityCompat.requestPermissions(thisActivity,
                new String[]{Manifest.permission.READ_CONTACTS},
                MY_PERMISSIONS_REQUEST_READ_CONTACTS);

        // MY_PERMISSIONS_REQUEST_READ_CONTACTS is an
        // app-defined int constant. The callback method gets the
        // result of the request.
    }
}




@Override
public void onRequestPermissionsResult(int requestCode,
        String permissions[], int[] grantResults) {
    switch (requestCode) {
        case MY_PERMISSIONS_REQUEST_READ_CONTACTS: {
            // If request is cancelled, the result arrays are empty.
            if (grantResults.length > 0
                && grantResults[0] == PackageManager.PERMISSION_GRANTED) {

                // permission was granted, yay! Do the
                // contacts-related task you need to do.

            } else {

                // permission denied, boo! Disable the
                // functionality that depends on this permission.
            }
            return;
        }

        // other 'case' lines to check for other
        // permissions this app might request
    }
}





SCAN_FAILED_APPLICATION_REGISTRATION_FAILED

http://godoc.org/github.com/hyperledger/fabric

http://hyperledger-fabric.readthedocs.io/en/latest/

https://github.com/hyperledger-archives/fabric/blob/master/sdk/node/src/hfc.ts

https://github.com/hyperledger/fabric/blob/master/core/chaincode/shim/chaincode.go

https://github.com/hyperledger-archives/fabric/blob/master/docs/tech/attributes.md

https://github.com/hyperledger-archives/fabric/blob/master/docs/API/MemberServicesAPI.md


https://github.com/hyperledger/fabric-sdk-java/tree/master/src/main/java/org/hyperledger/fabric/sdk




mongo -version 
MongoDB shell version : 3.0.15

mongodb3 cluster
http://www.cnblogs.com/ljai/p/4898475.html

mongodb2 PK mongodb3 
  auth  zip cluster 
http://www.mongoing.com/archives/3700


Redis 2.8.4 

Redis3.0 引入了集群这个特性，Redis集群是一个分布式（distributed）、容错（fault-tolerant）的 Redis内存K/V服务

redis-4.0.1   http://redis.io/downloads

http://www.cnblogs.com/piscesLoveCc/p/5779795.html






